// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: Bestiary/Bestiary.proto

package Bestiary

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BPCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Public        bool                   `protobuf:"varint,2,opt,name=public,proto3" json:"public,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BPCRequest) Reset() {
	*x = BPCRequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPCRequest) ProtoMessage() {}

func (x *BPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPCRequest.ProtoReflect.Descriptor instead.
func (*BPCRequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{0}
}

func (x *BPCRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BPCRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *BPCRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{1}
}

type Bestiary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Downloads     int32                  `protobuf:"varint,3,opt,name=downloads,proto3" json:"downloads,omitempty"`
	UpdateDate    string                 `protobuf:"bytes,4,opt,name=updateDate,proto3" json:"updateDate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bestiary) Reset() {
	*x = Bestiary{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bestiary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bestiary) ProtoMessage() {}

func (x *Bestiary) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bestiary.ProtoReflect.Descriptor instead.
func (*Bestiary) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{2}
}

func (x *Bestiary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Bestiary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bestiary) GetDownloads() int32 {
	if x != nil {
		return x.Downloads
	}
	return 0
}

func (x *Bestiary) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

// поиск бестиариев
type FindBestiaries struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserLogin     string                 `protobuf:"bytes,2,opt,name=userLogin,proto3" json:"userLogin,omitempty"`
	SortBy        string                 `protobuf:"bytes,3,opt,name=sortBy,proto3" json:"sortBy,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindBestiaries) Reset() {
	*x = FindBestiaries{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindBestiaries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBestiaries) ProtoMessage() {}

func (x *FindBestiaries) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBestiaries.ProtoReflect.Descriptor instead.
func (*FindBestiaries) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{3}
}

func (x *FindBestiaries) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindBestiaries) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *FindBestiaries) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *FindBestiaries) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SortedBestiaries struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bestiaries    []*Bestiary            `protobuf:"bytes,1,rep,name=bestiaries,proto3" json:"bestiaries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortedBestiaries) Reset() {
	*x = SortedBestiaries{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortedBestiaries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortedBestiaries) ProtoMessage() {}

func (x *SortedBestiaries) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortedBestiaries.ProtoReflect.Descriptor instead.
func (*SortedBestiaries) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{4}
}

func (x *SortedBestiaries) GetBestiaries() []*Bestiary {
	if x != nil {
		return x.Bestiaries
	}
	return nil
}

// создание бестиария
type BCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BCRequest) Reset() {
	*x = BCRequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BCRequest) ProtoMessage() {}

func (x *BCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BCRequest.ProtoReflect.Descriptor instead.
func (*BCRequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{5}
}

func (x *BCRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BCRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// изменение бестиария
type BURequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BURequest) Reset() {
	*x = BURequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BURequest) ProtoMessage() {}

func (x *BURequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BURequest.ProtoReflect.Descriptor instead.
func (*BURequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{6}
}

func (x *BURequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BURequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BURequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type BUResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BUResponse) Reset() {
	*x = BUResponse{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BUResponse) ProtoMessage() {}

func (x *BUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BUResponse.ProtoReflect.Descriptor instead.
func (*BUResponse) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{7}
}

func (x *BUResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// удаление бестиария
type BDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BDRequest) Reset() {
	*x = BDRequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BDRequest) ProtoMessage() {}

func (x *BDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BDRequest.ProtoReflect.Descriptor instead.
func (*BDRequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{8}
}

func (x *BDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type BDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BDResponse) Reset() {
	*x = BDResponse{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BDResponse) ProtoMessage() {}

func (x *BDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BDResponse.ProtoReflect.Descriptor instead.
func (*BDResponse) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{9}
}

func (x *BDResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// добавление бестиария к себе
type BLoadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BLoadRequest) Reset() {
	*x = BLoadRequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLoadRequest) ProtoMessage() {}

func (x *BLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLoadRequest.ProtoReflect.Descriptor instead.
func (*BLoadRequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{10}
}

func (x *BLoadRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BLoadRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type BLoadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BLoadResponse) Reset() {
	*x = BLoadResponse{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLoadResponse) ProtoMessage() {}

func (x *BLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLoadResponse.ProtoReflect.Descriptor instead.
func (*BLoadResponse) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{11}
}

func (x *BLoadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Monster       []byte                 `protobuf:"bytes,1,opt,name=monster,proto3" json:"monster,omitempty"`
	ImageType     string                 `protobuf:"bytes,2,opt,name=image_type,json=imageType,proto3" json:"image_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{12}
}

func (x *Image) GetMonster() []byte {
	if x != nil {
		return x.Monster
	}
	return nil
}

func (x *Image) GetImageType() string {
	if x != nil {
		return x.ImageType
	}
	return ""
}

type Special struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	View          bool                   `protobuf:"varint,3,opt,name=view,proto3" json:"view,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Special) Reset() {
	*x = Special{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Special) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Special) ProtoMessage() {}

func (x *Special) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Special.ProtoReflect.Descriptor instead.
func (*Special) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{13}
}

func (x *Special) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Special) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Special) GetView() bool {
	if x != nil {
		return x.View
	}
	return false
}

// создания монстра в бестиарий
type MCRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BestiaryId      int64                  `protobuf:"varint,1,opt,name=bestiaryId,proto3" json:"bestiaryId,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Special         []*Special             `protobuf:"bytes,4,rep,name=special,proto3" json:"special,omitempty"`
	Image           *Image                 `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	MonsterView     bool                   `protobuf:"varint,6,opt,name=monsterView,proto3" json:"monsterView,omitempty"`
	NameView        bool                   `protobuf:"varint,7,opt,name=nameView,proto3" json:"nameView,omitempty"`
	DescriptionView bool                   `protobuf:"varint,8,opt,name=descriptionView,proto3" json:"descriptionView,omitempty"`
	ImageView       bool                   `protobuf:"varint,9,opt,name=imageView,proto3" json:"imageView,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MCRequest) Reset() {
	*x = MCRequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCRequest) ProtoMessage() {}

func (x *MCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCRequest.ProtoReflect.Descriptor instead.
func (*MCRequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{14}
}

func (x *MCRequest) GetBestiaryId() int64 {
	if x != nil {
		return x.BestiaryId
	}
	return 0
}

func (x *MCRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MCRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MCRequest) GetSpecial() []*Special {
	if x != nil {
		return x.Special
	}
	return nil
}

func (x *MCRequest) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *MCRequest) GetMonsterView() bool {
	if x != nil {
		return x.MonsterView
	}
	return false
}

func (x *MCRequest) GetNameView() bool {
	if x != nil {
		return x.NameView
	}
	return false
}

func (x *MCRequest) GetDescriptionView() bool {
	if x != nil {
		return x.DescriptionView
	}
	return false
}

func (x *MCRequest) GetImageView() bool {
	if x != nil {
		return x.ImageView
	}
	return false
}

type MCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MCResponse) Reset() {
	*x = MCResponse{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCResponse) ProtoMessage() {}

func (x *MCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCResponse.ProtoReflect.Descriptor instead.
func (*MCResponse) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{15}
}

func (x *MCResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// изменение монстра в бестиарии
type MURequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BestiaryId      int64                  `protobuf:"varint,1,opt,name=bestiaryId,proto3" json:"bestiaryId,omitempty"`
	MonsterId       int64                  `protobuf:"varint,2,opt,name=monsterId,proto3" json:"monsterId,omitempty"`
	Name            string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Special         []*Special             `protobuf:"bytes,5,rep,name=special,proto3" json:"special,omitempty"`
	Image           *Image                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	MonsterView     bool                   `protobuf:"varint,7,opt,name=monsterView,proto3" json:"monsterView,omitempty"`
	NameView        bool                   `protobuf:"varint,8,opt,name=nameView,proto3" json:"nameView,omitempty"`
	DescriptionView bool                   `protobuf:"varint,9,opt,name=descriptionView,proto3" json:"descriptionView,omitempty"`
	ImageView       bool                   `protobuf:"varint,10,opt,name=imageView,proto3" json:"imageView,omitempty"`
	Token           string                 `protobuf:"bytes,11,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MURequest) Reset() {
	*x = MURequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MURequest) ProtoMessage() {}

func (x *MURequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MURequest.ProtoReflect.Descriptor instead.
func (*MURequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{16}
}

func (x *MURequest) GetBestiaryId() int64 {
	if x != nil {
		return x.BestiaryId
	}
	return 0
}

func (x *MURequest) GetMonsterId() int64 {
	if x != nil {
		return x.MonsterId
	}
	return 0
}

func (x *MURequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MURequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MURequest) GetSpecial() []*Special {
	if x != nil {
		return x.Special
	}
	return nil
}

func (x *MURequest) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *MURequest) GetMonsterView() bool {
	if x != nil {
		return x.MonsterView
	}
	return false
}

func (x *MURequest) GetNameView() bool {
	if x != nil {
		return x.NameView
	}
	return false
}

func (x *MURequest) GetDescriptionView() bool {
	if x != nil {
		return x.DescriptionView
	}
	return false
}

func (x *MURequest) GetImageView() bool {
	if x != nil {
		return x.ImageView
	}
	return false
}

func (x *MURequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type MUResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MUResponse) Reset() {
	*x = MUResponse{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MUResponse) ProtoMessage() {}

func (x *MUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MUResponse.ProtoReflect.Descriptor instead.
func (*MUResponse) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{17}
}

func (x *MUResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// удаление монстра
type MDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BestiaryId    int64                  `protobuf:"varint,1,opt,name=bestiaryId,proto3" json:"bestiaryId,omitempty"`
	MonsterId     int64                  `protobuf:"varint,2,opt,name=monsterId,proto3" json:"monsterId,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MDRequest) Reset() {
	*x = MDRequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MDRequest) ProtoMessage() {}

func (x *MDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MDRequest.ProtoReflect.Descriptor instead.
func (*MDRequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{18}
}

func (x *MDRequest) GetBestiaryId() int64 {
	if x != nil {
		return x.BestiaryId
	}
	return 0
}

func (x *MDRequest) GetMonsterId() int64 {
	if x != nil {
		return x.MonsterId
	}
	return 0
}

func (x *MDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type MDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MDResponse) Reset() {
	*x = MDResponse{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MDResponse) ProtoMessage() {}

func (x *MDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MDResponse.ProtoReflect.Descriptor instead.
func (*MDResponse) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{19}
}

func (x *MDResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Monster struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MonsterId       int64                  `protobuf:"varint,1,opt,name=monsterId,proto3" json:"monsterId,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Special         []*Special             `protobuf:"bytes,4,rep,name=special,proto3" json:"special,omitempty"`
	Image           *Image                 `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	MonsterView     bool                   `protobuf:"varint,6,opt,name=monsterView,proto3" json:"monsterView,omitempty"`
	NameView        bool                   `protobuf:"varint,7,opt,name=nameView,proto3" json:"nameView,omitempty"`
	DescriptionView bool                   `protobuf:"varint,8,opt,name=descriptionView,proto3" json:"descriptionView,omitempty"`
	ImageView       bool                   `protobuf:"varint,9,opt,name=imageView,proto3" json:"imageView,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Monster) Reset() {
	*x = Monster{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monster) ProtoMessage() {}

func (x *Monster) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monster.ProtoReflect.Descriptor instead.
func (*Monster) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{20}
}

func (x *Monster) GetMonsterId() int64 {
	if x != nil {
		return x.MonsterId
	}
	return 0
}

func (x *Monster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Monster) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Monster) GetSpecial() []*Special {
	if x != nil {
		return x.Special
	}
	return nil
}

func (x *Monster) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Monster) GetMonsterView() bool {
	if x != nil {
		return x.MonsterView
	}
	return false
}

func (x *Monster) GetNameView() bool {
	if x != nil {
		return x.NameView
	}
	return false
}

func (x *Monster) GetDescriptionView() bool {
	if x != nil {
		return x.DescriptionView
	}
	return false
}

func (x *Monster) GetImageView() bool {
	if x != nil {
		return x.ImageView
	}
	return false
}

// получение бестиария
type BGRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BestiaryId    int64                  `protobuf:"varint,1,opt,name=bestiaryId,proto3" json:"bestiaryId,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BGRequest) Reset() {
	*x = BGRequest{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BGRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BGRequest) ProtoMessage() {}

func (x *BGRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BGRequest.ProtoReflect.Descriptor instead.
func (*BGRequest) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{21}
}

func (x *BGRequest) GetBestiaryId() int64 {
	if x != nil {
		return x.BestiaryId
	}
	return 0
}

func (x *BGRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type BGResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Public        bool                   `protobuf:"varint,2,opt,name=public,proto3" json:"public,omitempty"`
	Monster       []*Monster             `protobuf:"bytes,3,rep,name=monster,proto3" json:"monster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BGResponse) Reset() {
	*x = BGResponse{}
	mi := &file_Bestiary_Bestiary_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BGResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BGResponse) ProtoMessage() {}

func (x *BGResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bestiary_Bestiary_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BGResponse.ProtoReflect.Descriptor instead.
func (*BGResponse) Descriptor() ([]byte, []int) {
	return file_Bestiary_Bestiary_proto_rawDescGZIP(), []int{22}
}

func (x *BGResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BGResponse) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *BGResponse) GetMonster() []*Monster {
	if x != nil {
		return x.Monster
	}
	return nil
}

var File_Bestiary_Bestiary_proto protoreflect.FileDescriptor

const file_Bestiary_Bestiary_proto_rawDesc = "" +
	"\n" +
	"\x17Bestiary/Bestiary.proto\x12\bBestiary\"J\n" +
	"\n" +
	"BPCRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06public\x18\x02 \x01(\bR\x06public\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"\x0f\n" +
	"\rEmptyResponse\"l\n" +
	"\bBestiary\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tdownloads\x18\x03 \x01(\x05R\tdownloads\x12\x1e\n" +
	"\n" +
	"updateDate\x18\x04 \x01(\tR\n" +
	"updateDate\"p\n" +
	"\x0eFindBestiaries\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tuserLogin\x18\x02 \x01(\tR\tuserLogin\x12\x16\n" +
	"\x06sortBy\x18\x03 \x01(\tR\x06sortBy\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\"F\n" +
	"\x10SortedBestiaries\x122\n" +
	"\n" +
	"bestiaries\x18\x01 \x03(\v2\x12.Bestiary.BestiaryR\n" +
	"bestiaries\"5\n" +
	"\tBCRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"E\n" +
	"\tBURequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"\x1c\n" +
	"\n" +
	"BUResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"1\n" +
	"\tBDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"&\n" +
	"\n" +
	"BDResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"4\n" +
	"\fBLoadRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\")\n" +
	"\rBLoadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"@\n" +
	"\x05image\x12\x18\n" +
	"\amonster\x18\x01 \x01(\fR\amonster\x12\x1d\n" +
	"\n" +
	"image_type\x18\x02 \x01(\tR\timageType\"S\n" +
	"\aSpecial\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04view\x18\x03 \x01(\bR\x04view\"\xbb\x02\n" +
	"\tMCRequest\x12\x1e\n" +
	"\n" +
	"bestiaryId\x18\x01 \x01(\x03R\n" +
	"bestiaryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12+\n" +
	"\aspecial\x18\x04 \x03(\v2\x11.Bestiary.SpecialR\aspecial\x12%\n" +
	"\x05image\x18\x05 \x01(\v2\x0f.Bestiary.imageR\x05image\x12 \n" +
	"\vmonsterView\x18\x06 \x01(\bR\vmonsterView\x12\x1a\n" +
	"\bnameView\x18\a \x01(\bR\bnameView\x12(\n" +
	"\x0fdescriptionView\x18\b \x01(\bR\x0fdescriptionView\x12\x1c\n" +
	"\timageView\x18\t \x01(\bR\timageView\"\x1c\n" +
	"\n" +
	"MCResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xef\x02\n" +
	"\tMURequest\x12\x1e\n" +
	"\n" +
	"bestiaryId\x18\x01 \x01(\x03R\n" +
	"bestiaryId\x12\x1c\n" +
	"\tmonsterId\x18\x02 \x01(\x03R\tmonsterId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12+\n" +
	"\aspecial\x18\x05 \x03(\v2\x11.Bestiary.SpecialR\aspecial\x12%\n" +
	"\x05image\x18\x06 \x01(\v2\x0f.Bestiary.imageR\x05image\x12 \n" +
	"\vmonsterView\x18\a \x01(\bR\vmonsterView\x12\x1a\n" +
	"\bnameView\x18\b \x01(\bR\bnameView\x12(\n" +
	"\x0fdescriptionView\x18\t \x01(\bR\x0fdescriptionView\x12\x1c\n" +
	"\timageView\x18\n" +
	" \x01(\bR\timageView\x12\x14\n" +
	"\x05token\x18\v \x01(\tR\x05token\"\x1c\n" +
	"\n" +
	"MUResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"_\n" +
	"\tMDRequest\x12\x1e\n" +
	"\n" +
	"bestiaryId\x18\x01 \x01(\x03R\n" +
	"bestiaryId\x12\x1c\n" +
	"\tmonsterId\x18\x02 \x01(\x03R\tmonsterId\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"&\n" +
	"\n" +
	"MDResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xb7\x02\n" +
	"\amonster\x12\x1c\n" +
	"\tmonsterId\x18\x01 \x01(\x03R\tmonsterId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12+\n" +
	"\aspecial\x18\x04 \x03(\v2\x11.Bestiary.SpecialR\aspecial\x12%\n" +
	"\x05image\x18\x05 \x01(\v2\x0f.Bestiary.imageR\x05image\x12 \n" +
	"\vmonsterView\x18\x06 \x01(\bR\vmonsterView\x12\x1a\n" +
	"\bnameView\x18\a \x01(\bR\bnameView\x12(\n" +
	"\x0fdescriptionView\x18\b \x01(\bR\x0fdescriptionView\x12\x1c\n" +
	"\timageView\x18\t \x01(\bR\timageView\"A\n" +
	"\tBGRequest\x12\x1e\n" +
	"\n" +
	"bestiaryId\x18\x01 \x01(\x03R\n" +
	"bestiaryId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"e\n" +
	"\n" +
	"BGResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06public\x18\x02 \x01(\bR\x06public\x12+\n" +
	"\amonster\x18\x03 \x03(\v2\x11.Bestiary.monsterR\amonster2\xcd\x05\n" +
	"\x0fBestiaryService\x12>\n" +
	"\x0eBestiaryCreate\x12\x13.Bestiary.BCRequest\x1a\x17.Bestiary.EmptyResponse\x12D\n" +
	"\fBestiaryList\x12\x18.Bestiary.FindBestiaries\x1a\x1a.Bestiary.SortedBestiaries\x12D\n" +
	"\fUserBestiary\x12\x18.Bestiary.FindBestiaries\x1a\x1a.Bestiary.SortedBestiaries\x128\n" +
	"\vBestiaryGet\x12\x13.Bestiary.BGRequest\x1a\x14.Bestiary.BGResponse\x12;\n" +
	"\x0eBestiaryUpdate\x12\x13.Bestiary.BURequest\x1a\x14.Bestiary.BUResponse\x12;\n" +
	"\x0eBestiaryDelete\x12\x13.Bestiary.BDRequest\x1a\x14.Bestiary.BDResponse\x12E\n" +
	"\x14BestiaryPublicChange\x12\x14.Bestiary.BPCRequest\x1a\x17.Bestiary.EmptyResponse\x12?\n" +
	"\fBestiaryLoad\x12\x16.Bestiary.BLoadRequest\x1a\x17.Bestiary.BLoadResponse\x12:\n" +
	"\rMonsterCreate\x12\x13.Bestiary.MCRequest\x1a\x14.Bestiary.MCResponse\x12:\n" +
	"\rMonsterUpdate\x12\x13.Bestiary.MURequest\x1a\x14.Bestiary.MUResponse\x12:\n" +
	"\rMonsterDelete\x12\x13.Bestiary.MDRequest\x1a\x14.Bestiary.MDResponseB:Z8github.com/Izames/DnD-Auth-Proto/proto/Bestiary;Bestiaryb\x06proto3"

var (
	file_Bestiary_Bestiary_proto_rawDescOnce sync.Once
	file_Bestiary_Bestiary_proto_rawDescData []byte
)

func file_Bestiary_Bestiary_proto_rawDescGZIP() []byte {
	file_Bestiary_Bestiary_proto_rawDescOnce.Do(func() {
		file_Bestiary_Bestiary_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Bestiary_Bestiary_proto_rawDesc), len(file_Bestiary_Bestiary_proto_rawDesc)))
	})
	return file_Bestiary_Bestiary_proto_rawDescData
}

var file_Bestiary_Bestiary_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_Bestiary_Bestiary_proto_goTypes = []any{
	(*BPCRequest)(nil),       // 0: Bestiary.BPCRequest
	(*EmptyResponse)(nil),    // 1: Bestiary.EmptyResponse
	(*Bestiary)(nil),         // 2: Bestiary.Bestiary
	(*FindBestiaries)(nil),   // 3: Bestiary.FindBestiaries
	(*SortedBestiaries)(nil), // 4: Bestiary.SortedBestiaries
	(*BCRequest)(nil),        // 5: Bestiary.BCRequest
	(*BURequest)(nil),        // 6: Bestiary.BURequest
	(*BUResponse)(nil),       // 7: Bestiary.BUResponse
	(*BDRequest)(nil),        // 8: Bestiary.BDRequest
	(*BDResponse)(nil),       // 9: Bestiary.BDResponse
	(*BLoadRequest)(nil),     // 10: Bestiary.BLoadRequest
	(*BLoadResponse)(nil),    // 11: Bestiary.BLoadResponse
	(*Image)(nil),            // 12: Bestiary.image
	(*Special)(nil),          // 13: Bestiary.Special
	(*MCRequest)(nil),        // 14: Bestiary.MCRequest
	(*MCResponse)(nil),       // 15: Bestiary.MCResponse
	(*MURequest)(nil),        // 16: Bestiary.MURequest
	(*MUResponse)(nil),       // 17: Bestiary.MUResponse
	(*MDRequest)(nil),        // 18: Bestiary.MDRequest
	(*MDResponse)(nil),       // 19: Bestiary.MDResponse
	(*Monster)(nil),          // 20: Bestiary.monster
	(*BGRequest)(nil),        // 21: Bestiary.BGRequest
	(*BGResponse)(nil),       // 22: Bestiary.BGResponse
}
var file_Bestiary_Bestiary_proto_depIdxs = []int32{
	2,  // 0: Bestiary.SortedBestiaries.bestiaries:type_name -> Bestiary.Bestiary
	13, // 1: Bestiary.MCRequest.special:type_name -> Bestiary.Special
	12, // 2: Bestiary.MCRequest.image:type_name -> Bestiary.image
	13, // 3: Bestiary.MURequest.special:type_name -> Bestiary.Special
	12, // 4: Bestiary.MURequest.image:type_name -> Bestiary.image
	13, // 5: Bestiary.monster.special:type_name -> Bestiary.Special
	12, // 6: Bestiary.monster.image:type_name -> Bestiary.image
	20, // 7: Bestiary.BGResponse.monster:type_name -> Bestiary.monster
	5,  // 8: Bestiary.BestiaryService.BestiaryCreate:input_type -> Bestiary.BCRequest
	3,  // 9: Bestiary.BestiaryService.BestiaryList:input_type -> Bestiary.FindBestiaries
	3,  // 10: Bestiary.BestiaryService.UserBestiary:input_type -> Bestiary.FindBestiaries
	21, // 11: Bestiary.BestiaryService.BestiaryGet:input_type -> Bestiary.BGRequest
	6,  // 12: Bestiary.BestiaryService.BestiaryUpdate:input_type -> Bestiary.BURequest
	8,  // 13: Bestiary.BestiaryService.BestiaryDelete:input_type -> Bestiary.BDRequest
	0,  // 14: Bestiary.BestiaryService.BestiaryPublicChange:input_type -> Bestiary.BPCRequest
	10, // 15: Bestiary.BestiaryService.BestiaryLoad:input_type -> Bestiary.BLoadRequest
	14, // 16: Bestiary.BestiaryService.MonsterCreate:input_type -> Bestiary.MCRequest
	16, // 17: Bestiary.BestiaryService.MonsterUpdate:input_type -> Bestiary.MURequest
	18, // 18: Bestiary.BestiaryService.MonsterDelete:input_type -> Bestiary.MDRequest
	1,  // 19: Bestiary.BestiaryService.BestiaryCreate:output_type -> Bestiary.EmptyResponse
	4,  // 20: Bestiary.BestiaryService.BestiaryList:output_type -> Bestiary.SortedBestiaries
	4,  // 21: Bestiary.BestiaryService.UserBestiary:output_type -> Bestiary.SortedBestiaries
	22, // 22: Bestiary.BestiaryService.BestiaryGet:output_type -> Bestiary.BGResponse
	7,  // 23: Bestiary.BestiaryService.BestiaryUpdate:output_type -> Bestiary.BUResponse
	9,  // 24: Bestiary.BestiaryService.BestiaryDelete:output_type -> Bestiary.BDResponse
	1,  // 25: Bestiary.BestiaryService.BestiaryPublicChange:output_type -> Bestiary.EmptyResponse
	11, // 26: Bestiary.BestiaryService.BestiaryLoad:output_type -> Bestiary.BLoadResponse
	15, // 27: Bestiary.BestiaryService.MonsterCreate:output_type -> Bestiary.MCResponse
	17, // 28: Bestiary.BestiaryService.MonsterUpdate:output_type -> Bestiary.MUResponse
	19, // 29: Bestiary.BestiaryService.MonsterDelete:output_type -> Bestiary.MDResponse
	19, // [19:30] is the sub-list for method output_type
	8,  // [8:19] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_Bestiary_Bestiary_proto_init() }
func file_Bestiary_Bestiary_proto_init() {
	if File_Bestiary_Bestiary_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Bestiary_Bestiary_proto_rawDesc), len(file_Bestiary_Bestiary_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Bestiary_Bestiary_proto_goTypes,
		DependencyIndexes: file_Bestiary_Bestiary_proto_depIdxs,
		MessageInfos:      file_Bestiary_Bestiary_proto_msgTypes,
	}.Build()
	File_Bestiary_Bestiary_proto = out.File
	file_Bestiary_Bestiary_proto_goTypes = nil
	file_Bestiary_Bestiary_proto_depIdxs = nil
}
